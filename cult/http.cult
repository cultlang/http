(load-dll "CultlangUv")
(load-dll "CultlangHttp")

(require "builtin:cult/uv")
(require "builtin:cult/http")

(define loop (uv/loop))

(define pathToFile (function (path)
  (cond (string/compare path "/")
    "index.html"
    (string/slice path 1)
  )
))

(define peerHandlers (uv/stream {
  :error (function (ev client)
    (print ev)
  )
  :data (function (ev client)
    (print ev)
    (define req (http/request (string ev)))
    (define rep (http/response))
    
    (define handlers (uv/fs/context {
      :error (function (ev handle)
        (print ev)
        (http/response/code rep 404u16)
        (http/response/body rep "File Not Found Dork")
        (uv/stream/write client (string rep))
      )
      :open (function (ev handle)
        (uv/fs/fstat handle)
      )
      
      :fstat (function (ev handle)
        (uv/fs/read handle 0 (int64 (uv/fs/stat/size ev)))
      )
      
      :read (function (ev handle)
        (http/response/code rep 404u16)
        (http/response/body rep (string ev))
        (uv/stream/write client (string rep))
        (uv/fs/close handle)
      )
      
      :close (function (ev handle)
        (print "done")
      )
    }))
    (define file (uv/fs/file loop))
    (uv/fs/file/context file handlers)
    (uv/fs/open file (pathToFile (http/request/path req)))
  )
  :write (function (ev client)
    (uv/close client)
  )
}))


(define serverHandlers (uv/stream {
  :error (function (ev server)
    (print ev)
  )
  :listen (function (ev server)
    (print ev)
    (define peer (uv/tcp loop))
    
    (uv/stream/context peer peerHandlers)
    (uv/stream/accept server peer)
    (uv/stream/read peer)
  )
  :write (function (ev client)
    (print ev)
    (uv/close client)
  )
}))

(define server (uv/tcp loop))
(uv/stream/context server serverHandlers)
(uv/tcp/bind server "127.0.0.1" 6112u32)
(uv/run loop)