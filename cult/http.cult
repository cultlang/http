
(cond (string/compare (platform/triplecross) "x86_64-pc-windows-msvccoff") 
  (do
    (load-dll "CultlangUv.dll")
    (load-dll "CultlangHttp.dll")
  )
  (do
    (load-dll "libCultlangUv.so")
    (load-dll "libCultlangHttp.so")
  )
)

(require "builtin:cult/uv")
(require "builtin:cult/http")

(define loop (uv/loop))


(define handler (function (req rep)  
  (http/response/code rep 200u16)
  (http/response/body rep "Cool Stuff Dork")
))

(define peerHandlers (uv/stream {
  :error (function (ev client)
    (print ev)
  )
  :data (function (ev client)
    (print ev)
    (define req (http/request (string ev)))
    (define rep (http/response))
    (handler req rep)
    (uv/stream/write client (string rep))
  )
  :write (function (ev client)
    (print ev)
    (uv/close client)
  )
}))


(define serverHandlers (uv/stream {
  :error (function (ev server)
    (print ev)
  )
  :listen (function (ev server)
    (print ev)
    (define peer (uv/tcp loop))
    
    (uv/stream/context peer peerHandlers)
    (uv/stream/accept server peer)
    (uv/stream/read peer)
  )
  :write (function (ev client)
    (print ev)
    (uv/close client)
  )
}))

(define server (uv/tcp loop))
(uv/stream/context server serverHandlers)
(uv/tcp/bind server "127.0.0.1" 6112u32)
(uv/run loop)